// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250721213423_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Entities.Evaluation", b =>
                {
                    b.Property<int>("Id_Avaliacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Avaliacao"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Pacote")
                        .HasColumnType("int");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<double>("Nota")
                        .HasColumnType("float");

                    b.HasKey("Id_Avaliacao");

                    b.HasIndex("Id_Pacote");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("Evaluations");
                });

            modelBuilder.Entity("WebApplication1.Entities.Package", b =>
                {
                    b.Property<int>("Id_Pacote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Pacote"));

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DuracaoDias")
                        .HasColumnType("int");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id_Pacote");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("WebApplication1.Entities.Payment", b =>
                {
                    b.Property<int>("Id_Pagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Pagamento"));

                    b.Property<DateTime>("Data_Pagamento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Reserva")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id_Pagamento");

                    b.HasIndex("Id_Reserva")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("WebApplication1.Entities.Reservation", b =>
                {
                    b.Property<int>("Id_Reserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Reserva"));

                    b.Property<DateTime>("Data_Reserva")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Pacote")
                        .HasColumnType("int");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("Numero_Reserva")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id_Reserva");

                    b.HasIndex("Id_Pacote");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("WebApplication1.Entities.Traveler", b =>
                {
                    b.Property<int>("Id_Viajante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Viajante"));

                    b.Property<DateTime>("Data_Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Viajante");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("Travelers");
                });

            modelBuilder.Entity("WebApplication1.Entities.User", b =>
                {
                    b.Property<int>("Id_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_User"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_User");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebApplication1.backend.Entities.ReservationTraveler", b =>
                {
                    b.Property<int>("Id_Reserva")
                        .HasColumnType("int");

                    b.Property<int>("Id_Viajante")
                        .HasColumnType("int");

                    b.HasKey("Id_Reserva", "Id_Viajante");

                    b.HasIndex("Id_Viajante");

                    b.ToTable("ReservationTravelers");
                });

            modelBuilder.Entity("WebApplication1.Entities.Evaluation", b =>
                {
                    b.HasOne("WebApplication1.Entities.Package", "Pacote")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("Id_Pacote")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Evaluations_Packages_Id_Pacote");

                    b.HasOne("WebApplication1.Entities.User", "Usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Evaluations_Users_Id_Usuario");

                    b.Navigation("Pacote");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebApplication1.Entities.Payment", b =>
                {
                    b.HasOne("WebApplication1.Entities.Reservation", "Reserva")
                        .WithOne("Pagamento")
                        .HasForeignKey("WebApplication1.Entities.Payment", "Id_Reserva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Payments_Reservations_Id_Reserva");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("WebApplication1.Entities.Reservation", b =>
                {
                    b.HasOne("WebApplication1.Entities.Package", "Pacote")
                        .WithMany("Reservas")
                        .HasForeignKey("Id_Pacote")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Reservations_Packages_Id_Pacote");

                    b.HasOne("WebApplication1.Entities.User", "Usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Reservations_Users_Id_Usuario");

                    b.Navigation("Pacote");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebApplication1.Entities.Traveler", b =>
                {
                    b.HasOne("WebApplication1.Entities.User", "Usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Travelers_Users_Id_Usuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebApplication1.backend.Entities.ReservationTraveler", b =>
                {
                    b.HasOne("WebApplication1.Entities.Reservation", "Reserva")
                        .WithMany("ReservaViajantes")
                        .HasForeignKey("Id_Reserva")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_ReservaViajante_Reservation_Id_Reserva");

                    b.HasOne("WebApplication1.Entities.Traveler", "Viajante")
                        .WithMany("ReservaViajantes")
                        .HasForeignKey("Id_Viajante")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_ReservaViajante_Traveler_Id_Viajante");

                    b.Navigation("Reserva");

                    b.Navigation("Viajante");
                });

            modelBuilder.Entity("WebApplication1.Entities.Package", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("WebApplication1.Entities.Reservation", b =>
                {
                    b.Navigation("Pagamento")
                        .IsRequired();

                    b.Navigation("ReservaViajantes");
                });

            modelBuilder.Entity("WebApplication1.Entities.Traveler", b =>
                {
                    b.Navigation("ReservaViajantes");
                });
#pragma warning restore 612, 618
        }
    }
}
